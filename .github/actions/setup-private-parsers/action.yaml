name: 'Setup Private Parsers'
description: 'Sets up Go, loads an SSH key, fetches private Go dependencies, and creates the extraparsers.go file.'

inputs:
  ssh-private-key:
    description: 'The private SSH deploy key for the integrations repository.'
    required: true

runs:
  using: composite
  steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ">=1.24"

    - name: Load Private SSH Key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}

    - name: Configure Git, Fetch Dependencies, and Create Parsers File (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        git config --global url."git@github.com:".insteadOf "https://github.com/"
        Write-Host "Fetching private integrations dependency via SSH..."
        $env:GOPRIVATE = "github.com/keploy/integrations"
        go env -w GOPRIVATE=$env:GOPRIVATE
        go get github.com/keploy/integrations

        Write-Host "Creating extraparsers.go..."
        New-Item -ItemType Directory -Force -Path pkg/core/proxy | Out-Null
        @'
        //go:build linux

        package proxy

        import (
        	_ "github.com/keploy/integrations/pkg/parsers"
        )
        '@ | Set-Content pkg/core/proxy/extraparsers.go -NoNewline

    - name: Tidy Go modules (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "Tidying up Go modules..."
        go mod tidy

    - name: Configure Git, Fetch Dependencies, and Create Parsers File (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        set -euo pipefail
        git config --global url."git@github.com:".insteadOf "https://github.com/"
        echo "Fetching private integrations dependency via SSH..."
        GOPRIVATE=github.com/keploy/integrations go get github.com/keploy/integrations

        echo "Creating extraparsers.go..."
        mkdir -p pkg/core/proxy
        cat > pkg/core/proxy/extraparsers.go <<'EOF'
        //go:build linux

        package proxy

        import (
          _ "github.com/keploy/integrations/pkg/parsers"
        )
        EOF

    - name: Tidy Go modules (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        set -euo pipefail
        echo "Tidying up Go modules..."
        go mod tidy
