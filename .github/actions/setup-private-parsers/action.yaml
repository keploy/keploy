name: 'Setup Private Parsers'
description: 'Sets up Go, loads an SSH key, fetches private Go dependencies, and creates the extraparsers.go file.'

inputs:
  ssh-private-key:
    description: 'The private SSH deploy key for the integrations repository.'
    required: true

runs:
  using: composite
  steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ">=1.24"

    - name: Load Private SSH Key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}

    - name: Configure Git, Fetch Dependencies, and Create Parsers File
      if: runner.os != 'Windows'
      shell: bash
      run: |
        git config --global url."git@github.com:".insteadOf "https://github.com/"
        
        echo "Fetching private integrations dependency via SSH..."
        GOPRIVATE=github.com/keploy/integrations go get github.com/keploy/integrations
        
        echo "Creating extraparsers.go..."
        mkdir -p pkg/core/proxy
        cat <<'EOF' > pkg/core/proxy/extraparsers.go
        //go:build linux

        package proxy

        import (
        	_ "github.com/keploy/integrations/pkg/parsers"
        )
        EOF

    - name: Add any missing Go modules
      if: runner.os != 'Windows'
      shell: bash
      run: |
        echo "Tidying up Go modules..."
        go mod tidy    

    # ---------------- Windows ----------------
    - name: Configure Git/SSH and Fetch Integrations (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        # HOME for the runner service account (NetworkService)
        $env:HOME = $env:USERPROFILE

        # Ensure ~/.ssh exists
        $sshDir = Join-Path $env:HOME ".ssh"
        New-Item -ItemType Directory -Force -Path $sshDir | Out-Null

        # Trust GitHub host keys (fixes "No ED25519 host key is known")
        ssh-keyscan -t rsa,ecdsa,ed25519 github.com | Out-File -FilePath (Join-Path $sshDir "known_hosts") -Encoding ascii

        # Force SSH for any github.com URL (AFTER checkout)
        git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"
        git config --global url."ssh://git@github.com/".insteadOf "https://github.com:443/"
        git config --global url."ssh://git@github.com/".insteadOf "git@github.com:"

        # Use our known_hosts with strict checking
        $kh = (Join-Path $sshDir "known_hosts")
        git config --global core.sshCommand "ssh -o StrictHostKeyChecking=yes -o UserKnownHostsFile=$kh"

        # Go private module settings
        go env -w GOPRIVATE=github.com/keploy/*
        go env -w GONOSUMDB=github.com/keploy/*

        # Clear Go VCS cache so remotes re-resolve via SSH (in case https was cached)
        $gomod = (& go env GOMODCACHE)
        $vcs = Join-Path $gomod "cache\vcs"
        if (Test-Path $vcs) { Remove-Item -Recurse -Force $vcs }

        Write-Host "Fetching private integrations dependency via SSH..."
        go get github.com/keploy/integrations

        Write-Host "Creating extraparsers.go..."
        New-Item -ItemType Directory -Force -Path pkg/core/proxy | Out-Null
        @'
        //go:build linux

        package proxy

        import (
          _ "github.com/keploy/integrations/pkg/parsers"
        )
        '@ | Set-Content pkg/core/proxy/extraparsers.go -NoNewline


    - name: Add any missing Go modules
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "Tidying up Go modules..."
        go mod tidy    