name: GRPC on Linux
on:
  workflow_call:
    inputs:
      runner:
        description: 'The type of runner to use for this job'
        type: string
        required: false
        default: 'ubuntu-latest'
jobs:
  grpc_linux:
    if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: go-grpc
            path: go-grpc
            script_dir: go-grpc
        mode: [incoming, outgoing]
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.mode }}-grpc (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: keploy/keploy

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout samples-go repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-go
          path: samples-go

      - name: Run the ${{ matrix.app.name }} app
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-go/${{ matrix.app.path }}
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/golang/${{ matrix.app.script_dir }}/grpc-linux.sh ${{ matrix.mode }}
