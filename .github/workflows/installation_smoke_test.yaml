name: Installation Smoke Test

on:
  workflow_run:
    workflows: ["Docker", "Release"]
    types: [completed]

jobs:
  smoke-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        environment: [native, docker]

    steps:
      - name: Get Latest Release from GitHub
        shell: bash
        run: |
          set -e
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/keploy/keploy/releases/latest | jq -r '.tag_name')
          echo "Expected Version: $LATEST_RELEASE"
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV

      - name: Set up environment
        run: echo "Running on $(uname -s)-$(uname -m) in ${{ matrix.environment }} mode"

      - name: Install Keploy via One-Click Installer (Native)
        if: matrix.environment == 'native'
        shell: bash
        run: |
          set -e
          curl --silent -O -L https://keploy.io/install.sh
          bash install.sh

      - name: Install Keploy via One-Click Installer (Docker)
        if: matrix.environment == 'docker'
        shell: bash
        run: |
          set -e
          docker run --rm ubuntu bash -c "
            apt-get update && apt-get install -y curl;
            curl --silent -O -L https://keploy.io/install.sh;
            bash install.sh
          "

      - name: Verify Installed Version (Native)
        if: matrix.environment == 'native'
        shell: bash
        run: |
          set -e
          INSTALLED_VERSION=$(keploy version | awk '{print $NF}')
          echo "Installed Version: $INSTALLED_VERSION"

          if [ "$INSTALLED_VERSION" != "$LATEST_RELEASE" ]; then
            echo "Installed version does not match the latest release!"
            exit 1
          else
            echo "Keploy installed successfully and matches the latest release."
          fi

      - name: Verify Installed Version (Docker)
        if: matrix.environment == 'docker'
        shell: bash
        run: |
          set -e
          INSTALLED_VERSION=$(docker run --rm ubuntu bash -c "keploy version | awk '{print \$NF}'")
          echo "Installed Version (Docker): $INSTALLED_VERSION"

          if [ "$INSTALLED_VERSION" != "$LATEST_RELEASE" ]; then
            echo "Installed version does not match the latest release!"
            exit 1
          else
            echo "Keploy installed successfully in Docker and matches the latest release."
          fi
