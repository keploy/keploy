name: Rerecord Fuzzer On Linux

on:
  workflow_call:
    secrets:
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  rerecord_fuzzer_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        fuzzer:
          - name: Go Rerecord Fuzzer
            script_dir: rerecord
        config:
          - job: record_latest_rerecord_build
            record_src: latest
            rerecord_src: build
          - job: record_build_rerecord_latest
            record_src: build
            rerecord_src: latest
          - job: record_build_rerecord_build
            record_src: build
            rerecord_src: build
        fuzzer_version:
          - job: test_latest_fuzzer
            s3_path: "releases/rerecord-fuzzer/latest/rerecord-fuzzer-linux-amd64.tar.gz"

    name: ${{ matrix.fuzzer.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Keploy Binary (for Record)
        id: record_keploy
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - name: Download Keploy Binary (for Rerecord)
        id: rerecord_keploy
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.rerecord_src }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Download and Extract Rerecord Fuzzer
        id: rerecord_fuzzer
        run: |
          set -euo pipefail
          KEY="${{ matrix.fuzzer_version.s3_path }}"
          echo "Downloading fuzzer from s3://${{ vars.AWS_S3_BUCKET }}/${KEY}"
          aws s3 cp "s3://${{ vars.AWS_S3_BUCKET }}/${KEY}" .
          tar -xzf rerecord-fuzzer-linux-amd64.tar.gz
          chmod +x ./rerecord-client ./rerecord-server
          echo "client=$(realpath ./rerecord-client)" >> $GITHUB_OUTPUT
          echo "server=$(realpath ./rerecord-server)" >> $GITHUB_OUTPUT

      - name: Run Rerecord Fuzzer Test
        env:
          RECORD_KEPLOY_BIN:    ${{ steps.record_keploy.outputs.path }}
          RERECORD_KEPLOY_BIN:  ${{ steps.rerecord_keploy.outputs.path }}
          RERECORD_CLIENT_BIN:  ${{ steps.rerecord_fuzzer.outputs.client }}
          RERECORD_SERVER_BIN:  ${{ steps.rerecord_fuzzer.outputs.server }}
        run: |
          chmod +x $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/fuzzer/${{ matrix.fuzzer.script_dir }}/golang-linux.sh
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/fuzzer/${{ matrix.fuzzer.script_dir }}/golang-linux.sh
