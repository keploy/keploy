name: Prepare Binary and Run Workflows (Windows)
on:
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-upload:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add GitHub to known_hosts (Windows)
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Add Private Parsers
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}

      - name: Build Keploy (PR) - Windows (windows/amd64)
        shell: bash
        run: |
          GOOS=windows GOARCH=amd64 go build -tags=viper_bind_struct -o keploy.exe

      - uses: actions/upload-artifact@v4
        with: { name: build, path: keploy.exe }

  upload-latest:
    runs-on: windows-latest
    steps:
      - name: Download latest release (Windows)
        shell: bash
        run: |
          LATEST=$(curl -s https://api.github.com/repos/keploy/keploy/releases/latest | jq -r .tag_name)
          URL="https://github.com/keploy/keploy/releases/download/${LATEST}/keploy_windows_amd64.tar.gz"
          curl -L "$URL" -o keploy.tar.gz
          tar -xzf keploy.tar.gz
          # Ensure the binary is named keploy.exe for consistency
          if [ ! -f keploy.exe ] && [ -f keploy ]; then mv keploy keploy.exe; fi
          chmod +x keploy.exe || true
      - uses: actions/upload-artifact@v4
        with: { name: latest, path: keploy.exe }

  build-docker-image:
    runs-on: windows-latest
    needs: [build-and-upload, upload-latest]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.23"

      - name: Add GitHub to known_hosts (Windows)
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Add Private Parsers
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: .

      - name: Prepare Dockerfile for PR Build
        shell: bash
        run: |
          # Add the SSH host key to trust github.com and configure git to use SSH
          sed -i '/COPY go.mod go.sum \/app\//a RUN git config --global url."ssh:\/\/git@github.com\/".insteadOf "https:\/\/github.com\/" \&\& mkdir -p -m 0700 ~\/.ssh \&\& ssh-keyscan github.com >> ~\/.ssh\/known_hosts' ./Dockerfile
          
          # Ensure the go mod download command uses the SSH agent mount
          sed -i 's/RUN go mod download/RUN --mount=type=ssh go mod download/' ./Dockerfile

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          ssh: default
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SENTRY_DSN_DOCKER=${{secrets.SENTRY_DSN_DOCKER}}
            GITTHUB_APP_CLIENT_ID=${{ secrets.CLIENT_ID_GITHUB_APP }}

      - name: Clean up git config
        if: always()
        continue-on-error: true
        run: |
          git config --global --unset url."git@github.com:".insteadOf

  run_python_docker_windows:
    needs: [build-and-upload, upload-latest, build-docker-image]
    uses: ./.github/workflows/python_docker_windows.yml

  run_golang_docker_windows:
    needs: [build-and-upload, upload-latest, build-docker-image]
    uses: ./.github/workflows/golang_docker_windows.yml
