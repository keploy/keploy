name: Prepare Binary and Run Workflows (Windows)
on:
  pull_request:
    branches: [main]

jobs:
  build-and-upload:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Clean up git config (ensure HTTPS for checkout)
        if: always()
        continue-on-error: true
        shell: powershell
        run: |
          git config --global --unset-all url."git@github.com:".insteadof  2>$null
          git config --global --unset-all url."ssh://git@github.com/".insteadof  2>$null
          git config --global --unset-all core.sshCommand  2>$null
          git config --global --list

      - name: Configure Git EOL on Windows
        shell: powershell
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.23"

      # - name: Add Private Parsers
      #   uses: ./.github/actions/setup-private-parsers
      #   with:
      #     ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}

      - name: Build Keploy (PR) - Windows (windows/amd64)
        shell: powershell
        run: |
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          $env:CGO_ENABLED = "0"
          go build -tags=viper_bind_struct -o keploy.exe ./main.go

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with: 
          name: build
          path: keploy.exe

      - name: Clean up git config
        if: always()
        continue-on-error: true
        shell: powershell
        run: |
          git config --global --unset url."git@github.com:".insteadOf

  upload-latest:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - name: Download latest release (Windows)
        shell: powershell
        run: |
          # Get latest release tag
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/keploy/keploy/releases/latest"
          $latest = $response.tag_name
          Write-Host "Latest version: $latest"
          
          # Download Windows tar.gz
          $url = "https://github.com/keploy/keploy/releases/download/$latest/keploy_windows_amd64.tar.gz"
          Write-Host "Downloading from: $url"
          
          Invoke-WebRequest -Uri $url -OutFile "keploy.tar.gz"
          
          # Extract using tar (available in Windows 10+)
          tar -xzf keploy.tar.gz
          
          # Rename to keploy.exe if needed (the archive might contain keploy.exe already)
          if (Test-Path "keploy") {
            Move-Item "keploy" "keploy.exe"
          }

      - name: Upload latest artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest
          path: keploy.exe
