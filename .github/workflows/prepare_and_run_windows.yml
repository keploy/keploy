name: Prepare Binary and Run Workflows (Windows)
on:
  pull_request:
    branches: [main]
jobs:
  build-and-upload:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add GitHub to known_hosts (Windows)
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Add Private Parsers
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}

      - name: Build Keploy (PR) - Windows (windows/amd64)
        shell: bash
        run: |
          GOOS=windows GOARCH=amd64 go build -tags=viper_bind_struct -o keploy.exe

      - uses: actions/upload-artifact@v4
        with: { name: build, path: keploy.exe }

  upload-latest:
    runs-on: windows-latest
    steps:
      - name: Download latest release (Windows)
        shell: bash
        run: |
          LATEST=$(curl -s https://api.github.com/repos/keploy/keploy/releases/latest | jq -r .tag_name)
          URL="https://github.com/keploy/keploy/releases/download/${LATEST}/keploy_windows_amd64.tar.gz"
          curl -L "$URL" -o keploy.tar.gz
          tar -xzf keploy.tar.gz
          # Ensure the binary is named keploy.exe for consistency
          if [ ! -f keploy.exe ] && [ -f keploy ]; then mv keploy keploy.exe; fi
          chmod +x keploy.exe || true
      - uses: actions/upload-artifact@v4
        with: { name: latest, path: keploy.exe }

  build-docker-image:
    runs-on: windows-latest
    needs: [build-and-upload, upload-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Add GitHub to known_hosts (Windows)
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Add Private Parsers
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}

      - name: Build image (Linux if possible, else Windows variant)
        id: build_image_win
        shell: bash
        run: |
          source ./.github/workflows/test_workflow_scripts/update-docker-windows.sh

      - name: Push image
        if: steps.build_image_win.outputs.built == 'true'
        run: |
          docker push ${{ steps.build_image_win.outputs.image }}

      - name: Clean up git config
        if: always()
        continue-on-error: true
        run: |
          git config --global --unset url."git@github.com:".insteadOf


  run_python_docker_windows:
    needs: [build-and-upload, upload-latest, build-docker-image]
    uses: ./.github/workflows/python_docker_windows.yml

  run_golang_docker_windows:
    needs: [build-and-upload, upload-latest, build-docker-image]
    uses: ./.github/workflows/golang_docker_windows.yml
