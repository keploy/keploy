name: Release
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-go:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Remove existing assets from the release
        run: |
          release_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} | jq -r .id)
          if [ "$release_id" != "null" ]; then
            assets=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases/$release_id/assets | jq -r '.[].id')
            for asset in $assets; do
              curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/releases/assets/$asset
            done
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install gon for code signing and app notarization
        run: |
          wget -q https://github.com/Bearer/gon/releases/download/v0.0.37/gon_macos.zip
          unzip gon_macos.zip -d /usr/local/bin
          rm -rf gon_macos.zip

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: v1.26.2
          args: release --rm-dist
        env:
          AC_PROVIDER: ${{ secrets.APPLE_ACCOUNT_TEAM_ID }}
          AC_PASSWORD: ${{ secrets.APPLE_ACCOUNT_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_DSN_BINARY: ${{ secrets.SENTRY_DSN_BINARY }}
          GITTHUB_APP_CLIENT_ID: ${{ secrets.CLIENT_ID_GITHUB_APP }}
          SERVER_URL: https://api.keploy.io
