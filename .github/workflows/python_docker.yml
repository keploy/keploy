name: Python On Docker
on:
  workflow_call:
    inputs:
      image_tag:            
        description: "Docker image tag or digest to pull"
        required: false
        type: string
jobs:
  python_docker_debian:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        codename: [bullseye, bookworm, trixie]
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: Debian ${{ matrix.codename }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: image
        uses: ./.github/actions/download-image
        with:
          image_tag: ${{ inputs.image_tag }}

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-python repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-python
          path: samples-python
          ref: parametize-debian-version
      - name: Run the flask-mongo application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
          DEBIAN_CODENAME: ${{ matrix.codename }}
        run: |
          cd samples-python/flask-mongo
          source ./../../.github/workflows/test_workflow_scripts/python/flask-mongo/python-docker.sh

  python_docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: flask-mongo
            path: flask-mongo
            script_dir: flask-mongo
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: image
        uses: ./.github/actions/download-image

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-python repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-python
          path: samples-python
      - name: Run the flask-mongo application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-python/${{ matrix.app.path }}
          source ./../../.github/workflows/test_workflow_scripts/python/${{ matrix.app.script_dir }}/python-docker.sh
