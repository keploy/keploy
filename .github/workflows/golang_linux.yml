name: Golang On Linux
on:
  workflow_call:
    inputs:
      runner:
        description: 'The type of runner to use for this job'
        type: string
        required: false
        default: 'ubuntu-latest'

jobs:
  golang_linux:
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: echo-mysql
            path: echo-mysql
            script_dir: echo_mysql
          - name: http-pokeapi
            path: http-pokeapi
            script_dir: http_pokeapi
          - name: risk-profile
            path: risk-profile
            script_dir: risk_profile
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: keploy/keploy
          ref: reusable-workflow

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-go repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-go
          path: samples-go
          ref: risk-profile
      - name: Run ${{ matrix.app.name }} application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-go/${{ matrix.app.path }}
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/golang/${{ matrix.app.script_dir }}/golang-linux.sh

  golang_linux_private:
    if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: gin-mongo
            path: gin-mongo
            script_dir: gin_mongo
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: keploy/keploy
          ref: reusable-workflow

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-go repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-go
          path: samples-go
      - name: Run ${{ matrix.app.name }} application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-go/${{ matrix.app.path }}
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/golang/${{ matrix.app.script_dir }}/golang-linux.sh