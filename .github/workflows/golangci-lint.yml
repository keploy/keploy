name: golangci-lint
on:
  push:
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read

# cancel the in-progress workflow when PR is refreshed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.23"
          cache: false
      
      - name: Add Private Parsers
        if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}
          go-cache: true

      - name: Configure Git to use SSH
        if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        run: git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          only-new-issues: true
          args: --timeout=5m

      - name: Check gofmt (diff with line numbers)
        run: |
          output=$(gofmt -l -d .)
          if [ -n "$output" ]; then
            echo "ðŸš¨ gofmt found issues:"
            echo "$output"
            exit 1
          fi

      - name: Check for Deprecated Dependencies
        if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        env:
          GOPRIVATE: github.com/keploy/*
        run: |
          source ./.github/workflows/test_workflow_scripts/check-deprecated-deps.sh

      - name: Check for keploy/integrations
        run: |
          if grep -q "keploy/integrations" go.mod go.sum; then
            echo "ðŸš¨ keploy/integrations found in manifest files:"
            grep -n "keploy/integrations" go.mod go.sum || true
            echo "Please remove keploy/integrations dependencies as they are not accessible to external contributors."
            exit 1
          fi