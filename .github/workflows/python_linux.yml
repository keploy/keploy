name: Python On Linux
on:
  workflow_call:
    inputs:
      runner:
        description: 'The type of runner to use for this job'
        type: string
        required: false
        default: 'ubuntu-latest'
      jobs_to_run:
        description: 'Controls which jobs to run. "all" runs everything.'
        type: string
        required: false
        default: 'all'
jobs:
  python_linux:
    if: ${{ inputs.jobs_to_run == 'all' }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: flask-secret
            path: flask-secret
            script_dir: flask-secret
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: keploy/keploy
          ref: reusable-workflow

      - name: Install Python
        uses: deadsnakes/action@v3.2.0
        with:
          python-version: "3.11"

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}
      - name: Checkout the samples-python repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-python
          path: samples-python
      - name: Run the ${{ matrix.app.name }} application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-python/${{ matrix.app.path }}
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/python/${{ matrix.app.script_dir }}/python-linux.sh

  python_linux_private:
    if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: django-postgres
            path: django-postgres/django_postgres
            script_dir: django_postgres
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: keploy/keploy
          ref: reusable-workflow
      
      - name: Install Python
        uses: deadsnakes/action@v3.2.0
        with:
          python-version: "3.11"

      - name: Setup docker-compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.33.1/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Install PostgreSQL dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libpq-dev build-essential python3-dev

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}
      - name: Checkout the samples-python repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-python
          path: samples-python
      - name: Run the ${{ matrix.app.name }} application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        run: |
          cd samples-python/${{ matrix.app.path }}
          source $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/python/${{ matrix.app.script_dir }}/python-linux.sh
