name: Python On Docker (Windows)
on:
  workflow_call:
jobs:
  python_docker_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        app: 
          - name: flask-mongo
            path: flask-mongo
            script_dir: flask-mongo
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Normalize Docker environment (Windows)
        shell: bash
        run: |
          echo "DOCKER_HOST before: ${DOCKER_HOST:-<unset>}"
          echo "DOCKER_HOST=" >> "$GITHUB_ENV"
          docker context use default || true
          docker version || { echo "Docker daemon not reachable. Ensure Docker Desktop is running on the self-hosted runner." >&2; exit 1; }

      - id: image
        uses: ./.github/actions/download-image
        env:
          DOCKER_HOST: ""

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-python repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-python
          path: samples-python

      - name: Run ${{ matrix.app.name }} application
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        shell: bash
        run: |
          cd samples-python/${{ matrix.app.path }}
          bash $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/python/${{ matrix.app.script_dir }}/windows/python-docker-windows.sh
