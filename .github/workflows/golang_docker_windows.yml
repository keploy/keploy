name: Golang On Docker (Windows)
on:
  workflow_call:
    inputs:
      image_ref:
        description: "Docker image to pull (e.g., ttl.sh/keploy/keploy-win-<sha>:1h)"
        required: true
        type: string

jobs:
  golang_docker_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: gin-mongo
            path: gin-mongo
            script_dir: gin_mongo
          - name: echo-sql
            path: echo-sql
            script_dir: echo_sql
        config:
          - job: record_latest_replay_build
            record_src: latest
            replay_src: build
          - job: record_build_replay_latest
            record_src: build
            replay_src: latest
          - job: record_build_replay_build
            record_src: build
            replay_src: build
    name: ${{ matrix.app.name }} (${{ matrix.config.job }}) (Windows)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check Docker availability (Windows)
        shell: bash
        run: |
          if ! command -v docker >/dev/null 2>&1; then
            echo "Docker is not available on GitHub-hosted Windows runners. Use a self-hosted Windows runner with Docker Desktop installed, or run this job on Linux." >&2
            exit 1
          fi
          docker version || { echo "Docker is not running. Start Docker Desktop on the runner." >&2; exit 1; }

      - name: Normalize Docker environment (Windows)
        shell: bash
        run: |
          echo "DOCKER_HOST before: ${DOCKER_HOST:-<unset>}"
          echo "DOCKER_HOST=" >> "$GITHUB_ENV"
          docker context use default || true
          docker version || { echo "Docker daemon not reachable. Ensure Docker Desktop is running on the self-hosted runner." >&2; exit 1; }

      - name: Setup Docker image for Windows
        shell: bash
        run: |
          # For Windows, we use the Windows-specific image built by the build-docker-image job
          # Tag it as the expected name for the test scripts
          echo "Pulling ${{ inputs.image_ref }}"
          docker pull "${{ inputs.image_ref }}"
          docker tag "${{ inputs.image_ref }}" ghcr.io/keploy/keploy:v2-dev

      - id: record
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.record_src }}

      - id: replay
        uses: ./.github/actions/download-binary
        with:
          src: ${{ matrix.config.replay_src }}

      - name: Checkout the samples-go repository
        uses: actions/checkout@v4
        with:
          repository: keploy/samples-go
          path: samples-go

      - name: Run ${{ matrix.app.name }} application (Windows)
        env:
          RECORD_BIN: ${{ steps.record.outputs.path }}
          REPLAY_BIN: ${{ steps.replay.outputs.path }}
        shell: bash
        run: |
          cd samples-go/${{ matrix.app.path }}
          bash $GITHUB_WORKSPACE/.github/workflows/test_workflow_scripts/golang/${{ matrix.app.script_dir }}/golang-docker-windows.sh
