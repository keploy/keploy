name: Prepare Binary and Run Workflows
on:
  workflow_call:
  inputs:
    integration-ref:
      description: 'The git ref (branch, tag, or commit) of the integrations repo to use.'
      required: false
      type: string
      default: 'main' # Use main branch if nothing is sent**
jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add Private Parsers
        if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}
          go-cache: true
          integration-ref: ${{ inputs.integration-ref }}

      - name: Build Keploy (non-race)
        run: |
          mkdir -p out/build-no-race
          go build -tags=viper_bind_struct -o out/build-no-race/keploy
      - uses: actions/upload-artifact@v4
        with:
          name: build-no-race
          path: out/build-no-race/keploy

      - name: Build Keploy (race)
        env:
          CGO_ENABLED: "1"   # race requires cgo; on ubuntu-latest it's fine
        run: |
          mkdir -p out/build
          go build -race -tags=viper_bind_struct -o out/build/keploy
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: out/build/keploy


  upload-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Upload latest release
        run: |
          LATEST=$(curl -s https://api.github.com/repos/keploy/keploy/releases/latest | jq -r .tag_name)
          URL="https://github.com/keploy/keploy/releases/download/${LATEST}/keploy_linux_amd64.tar.gz"
          curl -L "$URL" -o keploy.tar.gz
          tar -xzf keploy.tar.gz
          chmod +x keploy
      - uses: actions/upload-artifact@v4
        with: { name: latest, path: keploy }

  build-docker-image:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
      image_digest: ${{ steps.digest.outputs.image_digest }}
    steps:
      - uses: actions/checkout@v4

      - name: Add Private Parsers
        if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
        uses: ./.github/actions/setup-private-parsers
        with:
          ssh-private-key: ${{ secrets.INTEGRATIONS_REPO_DEPLOY_KEY_PRIVATE }}
          go-cache: true
          integration-ref: ${{ inputs.integration-ref }}
          
      - name: Build image
        run: |
          source ./.github/workflows/test_workflow_scripts/update-docker.sh
      
      - name: Make unique tag for this run
        id: tag
        env:
          PRNUM: ${{ github.event.pull_request.number }}
        run: |
          IMAGE_TAG="ttl.sh/keploy/keploy:${GITHUB_RUN_ID}-${GITHUB_SHA}-1h"
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          docker image inspect ttl.sh/keploy/keploy:1h > /dev/null
          docker tag ttl.sh/keploy/keploy:1h "$IMAGE_TAG"

      - name: Push unique tag
        run: |
          docker push "${{ steps.tag.outputs.image_tag }}"

  run_golang_linux:
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/golang_linux.yml
  run_java_linux:
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/java_linux.yml
  run_node_linux:
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/node_linux.yml
  run_python_linux:
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/python_linux.yml
  run_fuzzer_linux:
    if: ${{ (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/fuzzer_linux.yml
    secrets:
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  run_grpc_linux:
    needs: [build-and-upload, upload-latest]
    uses: ./.github/workflows/grpc_linux.yml
