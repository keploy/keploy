// Code generated by mockery v2.53.2. DO NOT EDIT.

package report

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTestDB is an autogenerated mock type for the TestDB type
type MockTestDB struct {
	mock.Mock
}

// GetReportTestSets provides a mock function with given fields: ctx, reportID
func (_m *MockTestDB) GetReportTestSets(ctx context.Context, reportID string) ([]string, error) {
	ret := _m.Called(ctx, reportID)

	if len(ret) == 0 {
		panic("no return value specified for GetReportTestSets")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]string, error)); ok {
		return rf(ctx, reportID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []string); ok {
		r0 = rf(ctx, reportID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, reportID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockTestDB creates a new instance of MockTestDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTestDB(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTestDB {
	mock := &MockTestDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
