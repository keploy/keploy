// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: ipc.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InterceptConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default bool     `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	Actions []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *InterceptConf) Reset() {
	*x = InterceptConf{}
	mi := &file_ipc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterceptConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterceptConf) ProtoMessage() {}

func (x *InterceptConf) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterceptConf.ProtoReflect.Descriptor instead.
func (*InterceptConf) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{0}
}

func (x *InterceptConf) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *InterceptConf) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*Message_Flow
	//	*Message_SocketOpenEvent
	//	*Message_SocketCloseEvent
	//	*Message_SocketDataEvent
	Message isMessage_Message `protobuf_oneof:"message"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_ipc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{1}
}

func (m *Message) GetMessage() isMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *Message) GetFlow() *NewFlow {
	if x, ok := x.GetMessage().(*Message_Flow); ok {
		return x.Flow
	}
	return nil
}

func (x *Message) GetSocketOpenEvent() *SocketOpenEvent {
	if x, ok := x.GetMessage().(*Message_SocketOpenEvent); ok {
		return x.SocketOpenEvent
	}
	return nil
}

func (x *Message) GetSocketCloseEvent() *SocketCloseEvent {
	if x, ok := x.GetMessage().(*Message_SocketCloseEvent); ok {
		return x.SocketCloseEvent
	}
	return nil
}

func (x *Message) GetSocketDataEvent() *SocketDataEvent {
	if x, ok := x.GetMessage().(*Message_SocketDataEvent); ok {
		return x.SocketDataEvent
	}
	return nil
}

type isMessage_Message interface {
	isMessage_Message()
}

type Message_Flow struct {
	Flow *NewFlow `protobuf:"bytes,1,opt,name=flow,proto3,oneof"`
}

type Message_SocketOpenEvent struct {
	SocketOpenEvent *SocketOpenEvent `protobuf:"bytes,2,opt,name=socketOpenEvent,proto3,oneof"`
}

type Message_SocketCloseEvent struct {
	SocketCloseEvent *SocketCloseEvent `protobuf:"bytes,3,opt,name=socketCloseEvent,proto3,oneof"`
}

type Message_SocketDataEvent struct {
	SocketDataEvent *SocketDataEvent `protobuf:"bytes,4,opt,name=socketDataEvent,proto3,oneof"`
}

func (*Message_Flow) isMessage_Message() {}

func (*Message_SocketOpenEvent) isMessage_Message() {}

func (*Message_SocketCloseEvent) isMessage_Message() {}

func (*Message_SocketDataEvent) isMessage_Message() {}

type NewFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*NewFlow_Tcp
	//	*NewFlow_Udp
	Message isNewFlow_Message `protobuf_oneof:"message"`
}

func (x *NewFlow) Reset() {
	*x = NewFlow{}
	mi := &file_ipc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFlow) ProtoMessage() {}

func (x *NewFlow) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFlow.ProtoReflect.Descriptor instead.
func (*NewFlow) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{2}
}

func (m *NewFlow) GetMessage() isNewFlow_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *NewFlow) GetTcp() *TcpFlow {
	if x, ok := x.GetMessage().(*NewFlow_Tcp); ok {
		return x.Tcp
	}
	return nil
}

func (x *NewFlow) GetUdp() *UdpFlow {
	if x, ok := x.GetMessage().(*NewFlow_Udp); ok {
		return x.Udp
	}
	return nil
}

type isNewFlow_Message interface {
	isNewFlow_Message()
}

type NewFlow_Tcp struct {
	Tcp *TcpFlow `protobuf:"bytes,1,opt,name=tcp,proto3,oneof"`
}

type NewFlow_Udp struct {
	Udp *UdpFlow `protobuf:"bytes,2,opt,name=udp,proto3,oneof"`
}

func (*NewFlow_Tcp) isNewFlow_Message() {}

func (*NewFlow_Udp) isNewFlow_Message() {}

type TcpFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteAddress *Address `protobuf:"bytes,1,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
}

func (x *TcpFlow) Reset() {
	*x = TcpFlow{}
	mi := &file_ipc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TcpFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpFlow) ProtoMessage() {}

func (x *TcpFlow) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpFlow.ProtoReflect.Descriptor instead.
func (*TcpFlow) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{3}
}

func (x *TcpFlow) GetRemoteAddress() *Address {
	if x != nil {
		return x.RemoteAddress
	}
	return nil
}

type UdpFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAddress *Address `protobuf:"bytes,1,opt,name=local_address,json=localAddress,proto3,oneof" json:"local_address,omitempty"`
}

func (x *UdpFlow) Reset() {
	*x = UdpFlow{}
	mi := &file_ipc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UdpFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UdpFlow) ProtoMessage() {}

func (x *UdpFlow) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UdpFlow.ProtoReflect.Descriptor instead.
func (*UdpFlow) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{4}
}

func (x *UdpFlow) GetLocalAddress() *Address {
	if x != nil {
		return x.LocalAddress
	}
	return nil
}

type UdpPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	RemoteAddress *Address `protobuf:"bytes,2,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
}

func (x *UdpPacket) Reset() {
	*x = UdpPacket{}
	mi := &file_ipc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UdpPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UdpPacket) ProtoMessage() {}

func (x *UdpPacket) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UdpPacket.ProtoReflect.Descriptor instead.
func (*UdpPacket) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{5}
}

func (x *UdpPacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UdpPacket) GetRemoteAddress() *Address {
	if x != nil {
		return x.RemoteAddress
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port    uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	SrcPort uint32 `protobuf:"varint,4,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_ipc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{6}
}

func (x *Address) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Address) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Address) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Address) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

type SocketOpenEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStampNano uint64 `protobuf:"varint,1,opt,name=time_stamp_nano,json=timeStampNano,proto3" json:"time_stamp_nano,omitempty"`
	Pid           uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *SocketOpenEvent) Reset() {
	*x = SocketOpenEvent{}
	mi := &file_ipc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocketOpenEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketOpenEvent) ProtoMessage() {}

func (x *SocketOpenEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketOpenEvent.ProtoReflect.Descriptor instead.
func (*SocketOpenEvent) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{7}
}

func (x *SocketOpenEvent) GetTimeStampNano() uint64 {
	if x != nil {
		return x.TimeStampNano
	}
	return 0
}

func (x *SocketOpenEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type SocketCloseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStampNano uint64 `protobuf:"varint,1,opt,name=time_stamp_nano,json=timeStampNano,proto3" json:"time_stamp_nano,omitempty"`
	Pid           uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *SocketCloseEvent) Reset() {
	*x = SocketCloseEvent{}
	mi := &file_ipc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocketCloseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketCloseEvent) ProtoMessage() {}

func (x *SocketCloseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketCloseEvent.ProtoReflect.Descriptor instead.
func (*SocketCloseEvent) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{8}
}

func (x *SocketCloseEvent) GetTimeStampNano() uint64 {
	if x != nil {
		return x.TimeStampNano
	}
	return 0
}

func (x *SocketCloseEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type SocketDataEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryTimeStampNano   uint64 `protobuf:"varint,1,opt,name=entry_time_stamp_nano,json=entryTimeStampNano,proto3" json:"entry_time_stamp_nano,omitempty"`
	TimeStampNano        uint64 `protobuf:"varint,2,opt,name=time_stamp_nano,json=timeStampNano,proto3" json:"time_stamp_nano,omitempty"`
	Pid                  uint32 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Direction            bool   `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	MsgSize              uint32 `protobuf:"varint,5,opt,name=msg_size,json=msgSize,proto3" json:"msg_size,omitempty"`
	Msg                  []byte `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	ValidateReadBytes    int64  `protobuf:"varint,7,opt,name=validate_read_bytes,json=validateReadBytes,proto3" json:"validate_read_bytes,omitempty"`
	ValidateWrittenBytes int64  `protobuf:"varint,8,opt,name=Validate_written_bytes,json=ValidateWrittenBytes,proto3" json:"Validate_written_bytes,omitempty"`
}

func (x *SocketDataEvent) Reset() {
	*x = SocketDataEvent{}
	mi := &file_ipc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocketDataEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketDataEvent) ProtoMessage() {}

func (x *SocketDataEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ipc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketDataEvent.ProtoReflect.Descriptor instead.
func (*SocketDataEvent) Descriptor() ([]byte, []int) {
	return file_ipc_proto_rawDescGZIP(), []int{9}
}

func (x *SocketDataEvent) GetEntryTimeStampNano() uint64 {
	if x != nil {
		return x.EntryTimeStampNano
	}
	return 0
}

func (x *SocketDataEvent) GetTimeStampNano() uint64 {
	if x != nil {
		return x.TimeStampNano
	}
	return 0
}

func (x *SocketDataEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SocketDataEvent) GetDirection() bool {
	if x != nil {
		return x.Direction
	}
	return false
}

func (x *SocketDataEvent) GetMsgSize() uint32 {
	if x != nil {
		return x.MsgSize
	}
	return 0
}

func (x *SocketDataEvent) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *SocketDataEvent) GetValidateReadBytes() int64 {
	if x != nil {
		return x.ValidateReadBytes
	}
	return 0
}

func (x *SocketDataEvent) GetValidateWrittenBytes() int64 {
	if x != nil {
		return x.ValidateWrittenBytes
	}
	return 0
}

var File_ipc_proto protoreflect.FileDescriptor

var file_ipc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x69, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x70, 0x63,
	0x22, 0x43, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0f,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a, 0x07, 0x4e, 0x65, 0x77,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x48,
	0x00, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x55, 0x64, 0x70, 0x46, 0x6c, 0x6f,
	0x77, 0x48, 0x00, 0x52, 0x03, 0x75, 0x64, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x07, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x33,
	0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x07, 0x55, 0x64, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x36,
	0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x54, 0x0a, 0x09, 0x55, 0x64, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x66,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x22, 0xaf, 0x02, 0x0a, 0x0f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a,
	0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65,
	0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ipc_proto_rawDescOnce sync.Once
	file_ipc_proto_rawDescData = file_ipc_proto_rawDesc
)

func file_ipc_proto_rawDescGZIP() []byte {
	file_ipc_proto_rawDescOnce.Do(func() {
		file_ipc_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipc_proto_rawDescData)
	})
	return file_ipc_proto_rawDescData
}

var file_ipc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ipc_proto_goTypes = []any{
	(*InterceptConf)(nil),    // 0: ipc.InterceptConf
	(*Message)(nil),          // 1: ipc.Message
	(*NewFlow)(nil),          // 2: ipc.NewFlow
	(*TcpFlow)(nil),          // 3: ipc.TcpFlow
	(*UdpFlow)(nil),          // 4: ipc.UdpFlow
	(*UdpPacket)(nil),        // 5: ipc.UdpPacket
	(*Address)(nil),          // 6: ipc.Address
	(*SocketOpenEvent)(nil),  // 7: ipc.SocketOpenEvent
	(*SocketCloseEvent)(nil), // 8: ipc.SocketCloseEvent
	(*SocketDataEvent)(nil),  // 9: ipc.SocketDataEvent
}
var file_ipc_proto_depIdxs = []int32{
	2, // 0: ipc.Message.flow:type_name -> ipc.NewFlow
	7, // 1: ipc.Message.socketOpenEvent:type_name -> ipc.SocketOpenEvent
	8, // 2: ipc.Message.socketCloseEvent:type_name -> ipc.SocketCloseEvent
	9, // 3: ipc.Message.socketDataEvent:type_name -> ipc.SocketDataEvent
	3, // 4: ipc.NewFlow.tcp:type_name -> ipc.TcpFlow
	4, // 5: ipc.NewFlow.udp:type_name -> ipc.UdpFlow
	6, // 6: ipc.TcpFlow.remote_address:type_name -> ipc.Address
	6, // 7: ipc.UdpFlow.local_address:type_name -> ipc.Address
	6, // 8: ipc.UdpPacket.remote_address:type_name -> ipc.Address
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ipc_proto_init() }
func file_ipc_proto_init() {
	if File_ipc_proto != nil {
		return
	}
	file_ipc_proto_msgTypes[1].OneofWrappers = []any{
		(*Message_Flow)(nil),
		(*Message_SocketOpenEvent)(nil),
		(*Message_SocketCloseEvent)(nil),
		(*Message_SocketDataEvent)(nil),
	}
	file_ipc_proto_msgTypes[2].OneofWrappers = []any{
		(*NewFlow_Tcp)(nil),
		(*NewFlow_Udp)(nil),
	}
	file_ipc_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ipc_proto_goTypes,
		DependencyIndexes: file_ipc_proto_depIdxs,
		MessageInfos:      file_ipc_proto_msgTypes,
	}.Build()
	File_ipc_proto = out.File
	file_ipc_proto_rawDesc = nil
	file_ipc_proto_goTypes = nil
	file_ipc_proto_depIdxs = nil
}
