# GoReleaser configuration
archives:
 -
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"

builds:
  - binary: keploy
    id: keploy
    main: ./main.go
    ldflags:
      - -s -w -X main.dsn={{.Env.SENTRY_DSN_BINARY}}
      - -s -w -X main.version={{.Version}}
      - -s -w -X main.apiServerURI={{.Env.SERVER_URL}}
      - -s -w -X main.gitHubClientID={{.Env.GITTHUB_APP_CLIENT_ID}}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    tags:
      - viper_bind_struct

  # - binary: keploy
  #   id: keploy-macos
  #   main: ./cli/server/main.go
  #   env:
  #     - CGO_ENABLED=0
  #   goos:
  #     - darwin
  #   goarch:
  #     - amd64
  #     - arm64

universal_binaries:
-
  # ID of resulting universal binary.
  #
  # Defaults to the project name.
  id: keploy-mac-universal

  # IDs to use to filter the built binaries.
  #
  # Defaults to the `id` field.
  # Since: v1.3.
  ids:
    - keploy

  # Whether to remove the previous single-arch binaries from the artifact list.
  # If left as false, your end release might have both several macOS archives:
  # amd64, arm64 and all.
  #
  # Defaults to false.
  replace: true
  hooks:
    post: gon -log-level=info -log-json ./gon.json

